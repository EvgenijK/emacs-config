#+TITLE: Svechnik's Emacs Config
#+AUTHOR: Evgenij Komov (Svechnik)
#+STARTUP: showeverything

* TABLE OF CONTENTS :toc_2_org:
- [[WHAT I'M USING EMACS FOR (Для каких работ я использую emacs)][WHAT I'M USING EMACS FOR (Для каких работ я использую emacs)]]
  - [[Основной текстовый редактор][Основной текстовый редактор]]
  - [[Разработка][Разработка]]
- [[DO BEFORE APPLYING ON FRESH EMACS][DO BEFORE APPLYING ON FRESH EMACS]]
- [[PACKAGES][PACKAGES]]
  - [[Adding Melpa repository][Adding Melpa repository]]
  - [[Enabling use-package][Enabling use-package]]
- [[INTERFACE][INTERFACE]]
  - [[Disable Menubar, Toolbars and Scrollbars][Disable Menubar, Toolbars and Scrollbars]]
  - [[Display Line/Column Numbers and Truncated Lines][Display Line/Column Numbers and Truncated Lines]]
  - [[Theme][Theme]]
  - [[Icons][Icons]]
  - [[Fonts][Fonts]]
  - [[Maximize window][Maximize window]]
- [[WHICH-KEY][WHICH-KEY]]
- [[IVY (COUNSEL)][IVY (COUNSEL)]]
- [[COMPANY][COMPANY]]
- [[START PAGE][START PAGE]]
- [[HOTKEYS][HOTKEYS]]
  - [[SUDO EDIT][SUDO EDIT]]
- [[ORG MODE][ORG MODE]]
  - [[Source Code Block Tag Expansion (org-temo)][Source Code Block Tag Expansion (org-temo)]]
  - [[Enabling Table of Contents][Enabling Table of Contents]]
  - [[Enabling Org Bullets][Enabling Org Bullets]]
  - [[Disable Electric Indent][Disable Electric Indent]]
- [[DEVELOPMENT][DEVELOPMENT]]
  - [[Git][Git]]
  - [[LSP][LSP]]
  - [[PHP][PHP]]

* WHAT I'M USING EMACS FOR (Для каких работ я использую emacs)
This chaper will be on russian.
** Основной текстовый редактор
*** заметки по работе
*** быстрая работа с временным текстом
** Разработка
*** Web-разработка на PHP
*** Разработка на C

* DO BEFORE APPLYING ON FRESH EMACS
- install 'use-package'
- install fonts
- run M-x all-the-icons-install-fonts to install fonts for icons

* PACKAGES
** Adding Melpa repository
#+begin_src emacs-lisp
  (require 'package)
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
  (package-initialize)
#+end_src

** Enabling use-package
On fresh emacs install you need to install use-package first
#+begin_src emacs-lisp
  (eval-when-compile
    (require 'use-package))
  (require 'use-package-ensure)
(setq use-package-always-ensure t)
#+end_src

* INTERFACE
** Disable Menubar, Toolbars and Scrollbars
#+begin_src emacs-lisp
(menu-bar-mode -1)   ;; меню сверху
(tool-bar-mode -1)   ;; полоска инструментов сверху
(scroll-bar-mode -1) ;; полоска скролла файла
#+end_src
** Display Line/Column Numbers and Truncated Lines
#+begin_src emacs-lisp
(global-display-line-numbers-mode 1)
(setq column-number-mode t)
(global-visual-line-mode t)
#+end_src
** Theme
#+begin_src emacs-lisp
(use-package doom-themes
  :config
  (load-theme 'doom-monokai-pro t))
#+end_src
** Icons
This is an icon set that can be used with dashboard, dired, ibuffer and other Emacs programs.
#+begin_src emacs-lisp
(use-package all-the-icons
  :ensure t
  :if (display-graphic-p))

(use-package all-the-icons-dired
  :hook (dired-mode . (lambda () (all-the-icons-dired-mode t))))
#+end_src
** Fonts
I'm using [[https://www.jetbrains.com/lp/mono/][JetBrains Mono]] and [[https://fonts.google.com/specimen/Ubuntu?query=Ubuntu][Ubuntu]] fonts here.
On fresh emacs install you need to install the fonts first.
#+begin_src emacs-lisp
  (set-face-attribute 'default nil
    :font "JetBrains Mono"
    :height 110
    :weight 'medium)
  (set-face-attribute 'variable-pitch nil
    :font "Ubuntu"
    :height 120
    :weight 'medium)
  (set-face-attribute 'fixed-pitch nil
    :font "JetBrains Mono"
    :height 110
    :weight 'medium)
  
    ;; Makes commented text and keywords italics.
    ;; This is working in emacsclient but not emacs.
    ;; Your font must have an italic face available.
    (set-face-attribute 'font-lock-comment-face nil
      :slant 'italic)
    (set-face-attribute 'font-lock-keyword-face nil
      :slant 'italic)
#+end_src

** Maximize window
#+begin_src emacs-lisp
  ;; [личное] Расширение окна при старте на полный экран, по хорошему поведение должно задаваться оконным менеджером
  (set-frame-parameter (selected-frame) 'fullscreen 'maximized)
  (add-to-list 'default-frame-alist '(fullscreen . maximized))
#+end_src
* WHICH-KEY
#+begin_src emacs-lisp
  (use-package which-key)
  (which-key-mode)
#+end_src
* IVY (COUNSEL)
- Ivy, a generic completion mechanism for Emacs.
- Counsel, a collection of Ivy-enhanced versions of common Emacs commands.
- Ivy-rich allows us to add descriptions alongside the commands in M-x.
#+begin_src emacs-lisp
(use-package counsel
  :after ivy
  :config (counsel-mode))

(use-package ivy
  :custom
  (setq ivy-use-virtual-buffers t)
  (setq ivy-count-format "(%d/%d) ")
  (setq enable-recursive-minibuffers t)
  :config
  (ivy-mode))

;; icons for ivy interface
(use-package all-the-icons-ivy-rich
  :ensure t
  :init (all-the-icons-ivy-rich-mode 1))

(use-package ivy-rich
  :after ivy
  :ensure t
  :init (ivy-rich-mode 1) ;; this gets us descriptions in M-x.
  :custom
  (ivy-virtual-abbreviate 'full
   ivy-rich-switch-buffer-align-virtual-buffer t
   ivy-rich-path-style 'abbrev)
  :config
  (ivy-set-display-transformer 'ivy-switch-buffer
                               'ivy-rich-switch-buffer-transformer))

#+end_src
* COMPANY
#+begin_src emacs-lisp
  (use-package company)
  (add-hook 'after-init-hook 'global-company-mode)
#+end_src

* START PAGE
#+begin_src emacs-lisp
  ;; Свой стартовый буфер
  (setq initial-buffer-choice "~/.emacs.d/start.org")

  ;; minor mode для стартовой страницы
  (define-minor-mode sv-start-mode
    "Minor mode for start page."
    :lighter " start"
    (setq-local org-link-elisp-confirm-function nil))

  (provide 'sv-start-mode)
#+end_src

* HOTKEYS
#+begin_src emacs-lisp
(use-package general
  :config
  ;; set up 'M-SPC' as the global leader key
  (general-create-definer sv/leader-keys
    :keymaps 'override
    :prefix "M-SPC")
)
#+end_src

** SUDO EDIT
Allows to reopen/open readonly file with sudo privileges
#+begin_src emacs-lisp
(use-package sudo-edit
  :config
    (sv/leader-keys
      "s" 'sudo-edit
      "S" 'sudo-edit-find-file))
#+end_src
* ORG MODE
** Source Code Block Tag Expansion (org-temo)
Org-tempo is not a separate package but a module within org that can be enabled.  Org-tempo allows for '<s' followed by TAB to expand to a begin_src tag.  Other expansions available include:
| Typing the below + TAB | Expands to ...                          |
|------------------------+-----------------------------------------|
| <a                     | '#+BEGIN_EXPORT ascii' … '#+END_EXPORT  |
| <c                     | '#+BEGIN_CENTER' … '#+END_CENTER'       |
| <C                     | '#+BEGIN_COMMENT' … '#+END_COMMENT'     |
| <e                     | '#+BEGIN_EXAMPLE' … '#+END_EXAMPLE'     |
| <E                     | '#+BEGIN_EXPORT' … '#+END_EXPORT'       |
| <h                     | '#+BEGIN_EXPORT html' … '#+END_EXPORT'  |
| <l                     | '#+BEGIN_EXPORT latex' … '#+END_EXPORT' |
| <q                     | '#+BEGIN_QUOTE' … '#+END_QUOTE'         |
| <s                     | '#+BEGIN_SRC' … '#+END_SRC'             |
| <v                     | '#+BEGIN_VERSE' … '#+END_VERSE'         |
#+begin_src emacs-lisp
(require 'org-tempo)
#+end_src

** Enabling Table of Contents
#+begin_src emacs-lisp
(use-package toc-org
    :commands toc-org-enable
    :init (add-hook 'org-mode-hook 'toc-org-enable))
#+end_src

** Enabling Org Bullets
#+begin_src emacs-lisp
(add-hook 'org-mode-hook 'org-indent-mode)
  (use-package org-bullets
  :init
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
#+end_src

** Disable Electric Indent
#+begin_src emacs-lisp
  (electric-indent-mode -1)
#+end_src
* DEVELOPMENT
** Git
*** Magit
Magit - модуль для работы с git, имеет свой буфер, заменяющий git status, набор хоткеев для быстрой работы.
#+begin_src emacs-lisp
  (use-package magit)
  ;; open magit status in same window as current buffer
  (setq magit-status-buffer-switch-function 'switch-to-buffer)

  ;; highlight word/letter changes in hunk diffs
  (setq magit-diff-refine-hunk t)
#+end_src
*** Highlight changes
#+begin_src emacs-lisp
  ;; diff-hl
  (use-package diff-hl)
  (global-diff-hl-mode)
  (diff-hl-flydiff-mode)
  (add-hook 'magit-pre-refresh-hook 'diff-hl-magit-pre-refresh)
  (add-hook 'magit-post-refresh-hook 'diff-hl-magit-post-refresh)
#+end_src

** LSP
#+begin_src emacs-lisp
  ;; LSP-mode ----------------------------

  ;; Настройки производительности для lsp-mode
  (setq gc-cons-threshold 100000000)
  (setq read-process-output-max (* 1024 1024)) ;; 1 mb

  (use-package lsp-mode)

  (require 'lsp-mode)
  (require 'lsp-ui)

  (with-eval-after-load 'lsp-mode
    (add-to-list 'lsp-file-watch-ignored-directories "[/\\\\]\\bitrix\\'"))

  ;; чтобы не отображалось предупреждение на больших проектах
  (setq lsp-file-watch-threshold 100000)

  ;; Префикс для команд lsp-mode
  (setq lsp-keymap-prefix "C-c l")

  ;; Запускать lsp сервер при открытии файла с php-mode 
  ;(add-hook 'php-mode-hook 'lsp)
  (add-hook 'php-mode-hook #'lsp-deferred) ;; until the buffer is visible

  ;; Интеграция с which-key-mode
  (with-eval-after-load 'lsp-mode
    (add-hook 'lsp-mode-hook #'lsp-enable-which-key-integration))
  ;; Розобраться как сделать: "enable which-key integration for all major modes by passing t as a parameter"

  ;; lsp-ui ------------------------------
  (setq lsp-ui-doc-show-with-cursor t) ;; почему-то не работает из коробки
  (setq lsp-ui-doc-delay 0.3)
  (setq lsp-ui-doc-position 'bottom) ;; at-point | bottom | top
  ;; в вариантах "top" и "bottom" окно с доком не учитывает,
  ;; что может быть открыто несколько окон: отображается в углу фрейма

#+end_src
** PHP
#+begin_src emacs-lisp
  ;; php-mode
  (use-package php-mode)
  (add-hook 'php-mode-hook 'php-enable-default-coding-style)
  (add-hook 'php-mode-hook 'lsp)

   ;; Интеграция с which-key-mode
  (with-eval-after-load 'lsp-mode
     (require 'dap-php))

  ;; Dap-mode ---------------------------
  ;; Для дебага через xdebug в PHP проектах
  (require 'dap-php)
  (dap-php-setup)

  ;; ssh-deploy --------------------------
  (use-package ssh-deploy)
  (require 'ssh-deploy)
  (ssh-deploy-add-after-save-hook)
#+end_src
